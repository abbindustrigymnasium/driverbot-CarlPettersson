#include "EspMQTTClient.h"
//Install libraries PubSubClient and EspMQTTClient   //inkluderar nödvändiga libraries
#include <Servo.h>
Servo servo;

void onConnectionEstablished();

EspMQTTClient client(
  "COMHEM_755195",           // Wifi ssid
  "mwymdtnz",           // Wifi password
  "maqiatto.com",  // MQTT broker ip
  1883,             // MQTT broker port
  "carl.pettersson@abbindustrigymnasium.se",            // MQTT username        Sätter och definerar alla värden
  "Snuten12",       // MQTT password
  "Microdatowwwr2311",          // Client name
  onConnectionEstablished, // Connection established callback
  true,             // Enable web updater
  true              // Enable debug messages
);


#define motorPinRightDir  0//D2
#define motorPinRightSpeed 5//D1

#define motorPinLeftDir 2
#define motorPinLeftSpeed 4

void setup() {
  servo.attach(14); //D5
  pinMode(motorPinRightDir, OUTPUT);
  pinMode(motorPinRightSpeed, OUTPUT);
  pinMode(motorPinLeftDir, OUTPUT);
  pinMode(motorPinLeftSpeed, OUTPUT);

  Serial.begin(115200);
  servo.write(0);
}

bool off = false;

void drive(bool dir, int speed) {
  //Om du vill åka rakt fram eller bak
  servo.write(90);
  
  Serial.println(speed);
  digitalWrite(motorPinLeftDir, dir);
  analogWrite(motorPinLeftSpeed, speed);

  digitalWrite(motorPinRightDir, dir);
  analogWrite(motorPinRightSpeed, speed);
}
   char Info='Y';
void onConnectionEstablished()
{

  client.subscribe("carl.pettersson@abbindustrigymnasium.se/drive", [] (const String & payload) //subscribar till brokern
  {
     char info = payload.charAt(0);   //kollar första symbolen på stringen som den hämtar från brokern
    Info=info;
    Serial.println(payload);

      int speed = 1024;       //sätter hastigheten hjulen snurrar
      int dir = 0;
 if (Info == 'F')   //om första symbolen == F så gör den det här
    {
      bool dir = false;
      client.publish("carl.pettersson@abbindustrigymnasium.se/drive", "false");  //publishar false till brokern
      
          digitalWrite(motorPinRightDir, 1);          //snurrar hjulen bakåt
          analogWrite(motorPinRightSpeed, speed);
    }
    else if (Info == 'T')    //om första symbolen == T så gör den det här
    {
      bool dir = false;
      client.publish("carl.pettersson@abbindustrigymnasium.se/drive", "true");   //snurrar hjulen framåt publishar true till brokern

          digitalWrite(motorPinRightDir, dir);  //sätter riktning den ska snurra
          analogWrite(motorPinRightSpeed, speed);    //sätter hasighet hjulen ska snurra
    }
 if (Info == 'R')
 {
  servo.write(180);
  }
  else if (Info == 'L')
  {
    servo.write(0);
    }
 if (Info == 'S')
  {
    servo.write(90);
    }
  
  });

  client.executeDelayed(5 * 1000, []() {
    client.publish("carl.pettersson@abbindustrigymnasium.se/drive", "his is a message sent 5 seconds later");  //skickar det här medelandet efter 5 sekunder
  });
}
void loop() {

  // put your main code here, to run repeatedly:
  client.loop();
}
